{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAGAVAN\\\\OneDrive\\\\Desktop\\\\Mock-Intrview\\\\frontend\\\\src\\\\components\\\\UploadResume.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useInterviewStore } from '../store';\nimport API from '../api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadResume = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const setParsedResume = useInterviewStore(state => state.setParsedResume);\n  const setQuestions = useInterviewStore(state => state.setQuestions);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      toast.error('Please select a file!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('resume', file);\n    try {\n      await API.post('/api/interviews/uploadResume', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      toast.success('Resume uploaded! Generating questions in 3s...');\n      setTimeout(async () => {\n        toast.info('Generating questions...');\n        const res = await API.get('/api/interviews/getQuestions');\n        setQuestions(res.data.questions);\n        toast.success('Questions ready!');\n      }, 3000);\n    } catch (err) {\n      console.error(err);\n      toast.error('Upload failed!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadResume, \"MqsqdjzOfnPBY3pNEwCC96oUZSE=\", false, function () {\n  return [useInterviewStore, useInterviewStore];\n});\n_c = UploadResume;\nexport default UploadResume;\nvar _c;\n$RefreshReg$(_c, \"UploadResume\");","map":{"version":3,"names":["React","useState","useInterviewStore","API","toast","jsxDEV","_jsxDEV","UploadResume","_s","file","setFile","setParsedResume","state","setQuestions","handleFileChange","e","target","files","handleUpload","error","formData","FormData","append","post","headers","success","setTimeout","info","res","get","data","questions","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/BHAGAVAN/OneDrive/Desktop/Mock-Intrview/frontend/src/components/UploadResume.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useInterviewStore } from '../store';\r\nimport API from '../api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst UploadResume = () => {\r\n  const [file, setFile] = useState(null);\r\n  const setParsedResume = useInterviewStore((state) => state.setParsedResume);\r\n  const setQuestions = useInterviewStore((state) => state.setQuestions);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      toast.error('Please select a file!');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('resume', file);\r\n\r\n    try {\r\n      await API.post('/api/interviews/uploadResume', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n\r\n      toast.success('Resume uploaded! Generating questions in 3s...');\r\n\r\n      setTimeout(async () => {\r\n        toast.info('Generating questions...');\r\n        const res = await API.get('/api/interviews/getQuestions');\r\n        setQuestions(res.data.questions);\r\n        toast.success('Questions ready!');\r\n      }, 3000);\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Upload failed!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Resume</h2>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadResume;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,QAAQ,UAAU;AAC5C,OAAOC,GAAG,MAAM,QAAQ;AACxB,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMU,eAAe,GAAGT,iBAAiB,CAAEU,KAAK,IAAKA,KAAK,CAACD,eAAe,CAAC;EAC3E,MAAME,YAAY,GAAGX,iBAAiB,CAAEU,KAAK,IAAKA,KAAK,CAACC,YAAY,CAAC;EAErE,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACT,IAAI,EAAE;MACTL,KAAK,CAACe,KAAK,CAAC,uBAAuB,CAAC;MACpC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEb,IAAI,CAAC;IAE/B,IAAI;MACF,MAAMN,GAAG,CAACoB,IAAI,CAAC,8BAA8B,EAAEH,QAAQ,EAAE;QACvDI,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MAEFpB,KAAK,CAACqB,OAAO,CAAC,gDAAgD,CAAC;MAE/DC,UAAU,CAAC,YAAY;QACrBtB,KAAK,CAACuB,IAAI,CAAC,yBAAyB,CAAC;QACrC,MAAMC,GAAG,GAAG,MAAMzB,GAAG,CAAC0B,GAAG,CAAC,8BAA8B,CAAC;QACzDhB,YAAY,CAACe,GAAG,CAACE,IAAI,CAACC,SAAS,CAAC;QAChC3B,KAAK,CAACqB,OAAO,CAAC,kBAAkB,CAAC;MACnC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACd,KAAK,CAACa,GAAG,CAAC;MAClB5B,KAAK,CAACe,KAAK,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEb,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBhC,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE1B;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDhC,OAAA;MAAQmC,OAAO,EAAEvB,YAAa;MAAAgB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA5CID,YAAY;EAAA,QAEQL,iBAAiB,EACpBA,iBAAiB;AAAA;AAAAwC,EAAA,GAHlCnC,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}