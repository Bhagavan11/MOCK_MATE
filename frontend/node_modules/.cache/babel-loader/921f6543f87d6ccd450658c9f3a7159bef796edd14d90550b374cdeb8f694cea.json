{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAGAVAN\\\\OneDrive\\\\Desktop\\\\Mock-Intrview\\\\frontend\\\\src\\\\components\\\\UploadResume.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useInterviewStore } from '../store';\nimport API from '../api';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadResume = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const setParsedResume = useInterviewStore(state => state.setParsedResume);\n  const setQuestions = useInterviewStore(state => state.setQuestions);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      toast.error(\"Please select a file!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('resume', file);\n    try {\n      const response = await API.post('/api/interviews/uploadResume', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      toast.success(\"Resume uploaded successfully!\");\n      setParsedResume(response.data.parsedResume);\n\n      // Automatically trigger getQuestions after 1 minute\n      setTimeout(async () => {\n        toast.info(\"Generating questions...\");\n        const questionsRes = await API.get('/api/interviews/getQuestions');\n        setQuestions(questionsRes.data.questions);\n        toast.success(\"Questions generated!\");\n      }, 60000);\n    } catch (err) {\n      console.error(err);\n      toast.error(\"Failed to upload resume!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadResume, \"MqsqdjzOfnPBY3pNEwCC96oUZSE=\", false, function () {\n  return [useInterviewStore, useInterviewStore];\n});\n_c = UploadResume;\nexport default UploadResume;\nvar _c;\n$RefreshReg$(_c, \"UploadResume\");","map":{"version":3,"names":["React","useState","useInterviewStore","API","toast","jsxDEV","_jsxDEV","UploadResume","_s","file","setFile","setParsedResume","state","setQuestions","handleFileChange","e","target","files","handleUpload","error","formData","FormData","append","response","post","headers","success","data","parsedResume","setTimeout","info","questionsRes","get","questions","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/BHAGAVAN/OneDrive/Desktop/Mock-Intrview/frontend/src/components/UploadResume.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useInterviewStore } from '../store';\r\nimport  API  from '../api';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst UploadResume = () => {\r\n  const [file, setFile] = useState(null);\r\n  const setParsedResume = useInterviewStore((state) => state.setParsedResume);\r\n  const setQuestions = useInterviewStore((state) => state.setQuestions);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      toast.error(\"Please select a file!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('resume', file);\r\n\r\n    try {\r\n      const response = await API.post('/api/interviews/uploadResume', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n\r\n      toast.success(\"Resume uploaded successfully!\");\r\n\r\n      setParsedResume(response.data.parsedResume);\r\n\r\n      // Automatically trigger getQuestions after 1 minute\r\n      setTimeout(async () => {\r\n        toast.info(\"Generating questions...\");\r\n        const questionsRes = await API.get('/api/interviews/getQuestions');\r\n        setQuestions(questionsRes.data.questions);\r\n        toast.success(\"Questions generated!\");\r\n      }, 60000);\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error(\"Failed to upload resume!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Resume</h2>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload Resume</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadResume;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,QAAQ,UAAU;AAC5C,OAAQC,GAAG,MAAO,QAAQ;AAC1B,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMU,eAAe,GAAGT,iBAAiB,CAAEU,KAAK,IAAKA,KAAK,CAACD,eAAe,CAAC;EAC3E,MAAME,YAAY,GAAGX,iBAAiB,CAAEU,KAAK,IAAKA,KAAK,CAACC,YAAY,CAAC;EAErE,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACT,IAAI,EAAE;MACTL,KAAK,CAACe,KAAK,CAAC,uBAAuB,CAAC;MACpC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEb,IAAI,CAAC;IAE/B,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QACxEK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFrB,KAAK,CAACsB,OAAO,CAAC,+BAA+B,CAAC;MAE9Cf,eAAe,CAACY,QAAQ,CAACI,IAAI,CAACC,YAAY,CAAC;;MAE3C;MACAC,UAAU,CAAC,YAAY;QACrBzB,KAAK,CAAC0B,IAAI,CAAC,yBAAyB,CAAC;QACrC,MAAMC,YAAY,GAAG,MAAM5B,GAAG,CAAC6B,GAAG,CAAC,8BAA8B,CAAC;QAClEnB,YAAY,CAACkB,YAAY,CAACJ,IAAI,CAACM,SAAS,CAAC;QACzC7B,KAAK,CAACsB,OAAO,CAAC,sBAAsB,CAAC;MACvC,CAAC,EAAE,KAAK,CAAC;IAEX,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAAChB,KAAK,CAACe,GAAG,CAAC;MAClB9B,KAAK,CAACe,KAAK,CAAC,0BAA0B,CAAC;IACzC;EACF,CAAC;EAED,oBACEb,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlC,OAAA;MAAOmC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE5B;IAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDlC,OAAA;MAAQqC,OAAO,EAAEzB,YAAa;MAAAkB,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAAChC,EAAA,CAlDID,YAAY;EAAA,QAEQL,iBAAiB,EACpBA,iBAAiB;AAAA;AAAA0C,EAAA,GAHlCrC,YAAY;AAoDlB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}