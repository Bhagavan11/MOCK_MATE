{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAGAVAN\\\\OneDrive\\\\Desktop\\\\Mock-Intrview\\\\frontend\\\\src\\\\components\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useInterviewStore } from \"../store\";\nimport { useSpeechToText } from \"../lib/speak\";\n\n// Inside your component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  startListening\n} = useSpeechToText(setAnswer);\nexport default function Questions() {\n  _s();\n  const {\n    questions,\n    currentIndex,\n    addAnswer,\n    nextQuestion\n  } = useInterviewStore();\n  const [answer, setAnswer] = useState(\"\");\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"placeholder\",\n    children: \"No questions yet.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 38\n  }, this);\n  if (currentIndex >= questions.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"placeholder\",\n    children: \"\\u2705 All questions answered.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 48\n  }, this);\n  const q = questions[currentIndex];\n  const handleNext = () => {\n    if (!answer.trim()) return; // Prevent empty answers\n    addAnswer({\n      q,\n      a: answer.trim()\n    });\n    setAnswer(\"\");\n    nextQuestion();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-progress\",\n      children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"question-text\",\n      children: q\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"answer-input\",\n      rows: \"5\",\n      placeholder: \"Type your answer...\",\n      value: answer,\n      onChange: e => setAnswer(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-primary\",\n      onClick: handleNext,\n      children: \"Submit Answer & Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startListening,\n      children: \"\\uD83C\\uDF99\\uFE0F Speak Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Questions, \"Cna6m6kx0/Ucgndqh5AQo3UsIQ4=\", false, function () {\n  return [useInterviewStore];\n});\n_c = Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","useInterviewStore","useSpeechToText","jsxDEV","_jsxDEV","startListening","setAnswer","Questions","_s","questions","currentIndex","addAnswer","nextQuestion","answer","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","q","handleNext","trim","a","rows","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/BHAGAVAN/OneDrive/Desktop/Mock-Intrview/frontend/src/components/Questions.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useInterviewStore } from \"../store\";\r\nimport { useSpeechToText } from \"../lib/speak\";\r\n\r\n// Inside your component\r\nconst { startListening } = useSpeechToText(setAnswer)\r\nexport default function Questions() {\r\n  const { questions, currentIndex, addAnswer, nextQuestion } = useInterviewStore();\r\n  const [answer, setAnswer] = useState(\"\");\r\n\r\n  if (questions.length === 0) return <p className=\"placeholder\">No questions yet.</p>;\r\n  if (currentIndex >= questions.length) return <p className=\"placeholder\">‚úÖ All questions answered.</p>;\r\n\r\n  const q = questions[currentIndex];\r\n\r\n  const handleNext = () => {\r\n    if (!answer.trim()) return; // Prevent empty answers\r\n    addAnswer({ q, a: answer.trim() });\r\n    setAnswer(\"\");\r\n    nextQuestion();\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-container\">\r\n      <div className=\"question-progress\">\r\n        Question {currentIndex + 1} of {questions.length}\r\n      </div>\r\n\r\n      <p className=\"question-text\">{q}</p>\r\n\r\n      <textarea\r\n        className=\"answer-input\"\r\n        rows=\"5\"\r\n        placeholder=\"Type your answer...\"\r\n        value={answer}\r\n        onChange={(e) => setAnswer(e.target.value)}\r\n      />\r\n\r\n      <button\r\n        className=\"btn-primary\"\r\n        onClick={handleNext}\r\n        \r\n      >\r\n        Submit Answer & Next\r\n      </button>\r\n      <button onClick={startListening}>\r\n  üéôÔ∏è Speak Answer\r\n</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,QAAQ,UAAU;AAC5C,SAASC,eAAe,QAAQ,cAAc;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAM;EAAEC;AAAe,CAAC,GAAGH,eAAe,CAACI,SAAS,CAAC;AACrD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM;IAAEC,SAAS;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGX,iBAAiB,CAAC,CAAC;EAChF,MAAM,CAACY,MAAM,EAAEP,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,IAAIS,SAAS,CAACK,MAAM,KAAK,CAAC,EAAE,oBAAOV,OAAA;IAAGW,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACnF,IAAIV,YAAY,IAAID,SAAS,CAACK,MAAM,EAAE,oBAAOV,OAAA;IAAGW,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAC;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAErG,MAAMC,CAAC,GAAGZ,SAAS,CAACC,YAAY,CAAC;EAEjC,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACT,MAAM,CAACU,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC;IAC5BZ,SAAS,CAAC;MAAEU,CAAC;MAAEG,CAAC,EAAEX,MAAM,CAACU,IAAI,CAAC;IAAE,CAAC,CAAC;IAClCjB,SAAS,CAAC,EAAE,CAAC;IACbM,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,oBACER,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCZ,OAAA;MAAKW,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAAC,WACxB,EAACN,YAAY,GAAG,CAAC,EAAC,MAAI,EAACD,SAAS,CAACK,MAAM;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAENhB,OAAA;MAAGW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEK;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpChB,OAAA;MACEW,SAAS,EAAC,cAAc;MACxBU,IAAI,EAAC,GAAG;MACRC,WAAW,EAAC,qBAAqB;MACjCC,KAAK,EAAEd,MAAO;MACde,QAAQ,EAAGC,CAAC,IAAKvB,SAAS,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAEFhB,OAAA;MACEW,SAAS,EAAC,aAAa;MACvBgB,OAAO,EAAET,UAAW;MAAAN,QAAA,EAErB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThB,OAAA;MAAQ2B,OAAO,EAAE1B,cAAe;MAAAW,QAAA,EAAC;IAEvC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV;AAACZ,EAAA,CA5CuBD,SAAS;EAAA,QAC8BN,iBAAiB;AAAA;AAAA+B,EAAA,GADxDzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}