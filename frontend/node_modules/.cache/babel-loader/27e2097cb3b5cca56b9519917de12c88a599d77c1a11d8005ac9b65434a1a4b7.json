{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAGAVAN\\\\OneDrive\\\\Desktop\\\\Mock-Intrview\\\\frontend\\\\src\\\\components\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useInterviewStore } from '../store/interviewStore';\nimport API from '../api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = () => {\n  _s();\n  const {\n    questions,\n    currentIndex,\n    addAnswer,\n    nextQuestion,\n    answers\n  } = useInterviewStore();\n  const [input, setInput] = useState('');\n  const handleNext = () => {\n    const q = questions[currentIndex];\n    addAnswer({\n      q,\n      a: input\n    });\n    setInput('');\n    nextQuestion();\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await API.post('/api/interviews/submitAnswers', {\n        answers\n      });\n      toast.success('Answers submitted!');\n      console.log('Evaluation:', response.data);\n    } catch (err) {\n      console.error(err);\n      toast.error('Error submitting answers');\n    }\n  };\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No questions yet.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 38\n  }, this);\n  if (currentIndex >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All done!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Question \", currentIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: questions[currentIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"4\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      disabled: !input.trim(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"l0HNicp3g2GYt/MDW3chbxrtAc4=\", false, function () {\n  return [useInterviewStore];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","useInterviewStore","API","toast","jsxDEV","_jsxDEV","Questions","_s","questions","currentIndex","addAnswer","nextQuestion","answers","input","setInput","handleNext","q","a","handleSubmit","response","post","success","console","log","data","err","error","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rows","value","onChange","e","target","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/BHAGAVAN/OneDrive/Desktop/Mock-Intrview/frontend/src/components/Questions.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useInterviewStore } from '../store/interviewStore';\r\nimport API  from '../api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst Questions = () => {\r\n  const { questions, currentIndex, addAnswer, nextQuestion, answers } = useInterviewStore();\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleNext = () => {\r\n    const q = questions[currentIndex];\r\n    addAnswer({ q, a: input });\r\n    setInput('');\r\n    nextQuestion();\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const response = await API.post('/api/interviews/submitAnswers', { answers });\r\n      toast.success('Answers submitted!');\r\n      console.log('Evaluation:', response.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Error submitting answers');\r\n    }\r\n  };\r\n\r\n  if (questions.length === 0) return <p>No questions yet.</p>;\r\n  if (currentIndex >= questions.length) {\r\n    return (\r\n      <div>\r\n        <h3>All done!</h3>\r\n        <button onClick={handleSubmit}>Submit Answers</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Question {currentIndex + 1}</h3>\r\n      <p>{questions[currentIndex]}</p>\r\n      <textarea\r\n        rows=\"4\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n      />\r\n      <br />\r\n      <button onClick={handleNext} disabled={!input.trim()}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}